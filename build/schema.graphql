type Comptroller @entity {
    # Only one of these
    id: ID!
    "Address of price oracle the comptroller uses"
    priceOracle: Bytes
    "Factor used to determine repayAmount for liquidating"
    closeFactor: BigInt
    "The percent bonus liquidators get for liquidating"
    liquidationIncentive: BigInt
    "Max assets a single user can enter"
    maxAssets: BigInt
}

type Market @entity {
    # cToken address
    id: ID!
    # block number when the market was created
    creationBlockNumber: BigInt!
    # most recent block number where the market was updated
    latestBlockNumber: BigInt!
    # cToken symbol
    cTokenSymbol: String!
    # number of decimals of the cToken
    cTokenDecimals: BigInt!
    # underlying token name
    underlyingName: String!
    # underlying token symbol
    underlyingSymbol: String!
    # underlying token address
    underlyingAddress: Bytes!
    # number of decimals of the underlying token
    underlyingDecimals: BigInt!
    # collator factor in decimal form
    collatoralFactor: BigDecimal!
    # reserve factor in decimal form
    reserveFactor: BigDecimal!
    # amount of underlying owned by the contract
    cash: BigDecimal!
    # how much underlying one cToken is worth
    exchangeRate: BigDecimal!
    # Supply rate per block
    supplyRate: BigInt!
    # Borrow rate per block
    borrowRate: BigInt!
    # supply apy not including the COMP distribution in decimal form
    supplyApy: BigDecimal!
    # borrow apy not including the COMP distribution in decimal form
    borrowApy: BigDecimal!
    # total supply apy including the COMP distribution in decimal form
    totalSupplyApy: BigDecimal!
    # total borrow apy including the COMP distribution in decimal form
    totalBorrowApy: BigDecimal!
    # total amount of underlying tokens supplied
    totalSupply: BigDecimal!
    # total amount of underlying tokens borrowed
    totalBorrow: BigDecimal!
    # total amount of underlying token in reserves
    totalReserves: BigDecimal!
    # utalization
    utalization: BigDecimal!
    # number of suppliers
    numberOfSuppliers: BigInt!
    # number of borrowers
    numberOfborrowers: BigInt!
    # price of the underlying token in USDC
    usdcPerUnderlying: BigDecimal!
    # list of all transactions associated with
    # transactions: [Transaction]! # TODO: derived from

    # historical data in hourly intervals
    historicalHourData: [MarketHourData!]! @derivedFrom(field: "market")
    # historical data in daily intervals
    historicalDayData: [MarketDayData!]! @derivedFrom(field: "market")
    # historical data in weekly intervals
    historicalWeekData: [MarketWeekData!]! @derivedFrom(field: "market")
}

type MarketHourData @entity {
    # token address concatendated with date
    id: ID!
    # market that this data belongs to
    market: Market!
    # timestamp rounded (TODO)
    date: BigInt!
    # supply apy not including the COMP distribution in decimal form
    supplyApy: BigDecimal!
    # borrow apy not including the COMP distribution in decimal form
    borrowApy: BigDecimal!
    # total supply apy including the COMP distribution in decimal form
    totalSupplyApy: BigDecimal!
    # total borrow apy including the COMP distribution in decimal form
    totalBorrowApy: BigDecimal!
    # total amount of underlying tokens supplied over time
    totalSupply: BigDecimal!
    # total amount of underlying tokens borrowed over time
    totalBorrow: BigDecimal!
    # total amount of underlying token in reserves over time
    totalReserves: BigDecimal!
    # utalization
    utalization: BigDecimal!
    # number of transactions that went into deriving this data entry
    txCount: BigInt!
}

type MarketDayData @entity {
    # token address concatendated with date
    id: ID!
    # market that this data belongs to
    market: Market!
    # timestamp rounded (TODO)
    date: BigInt!
    # supply apy not including the COMP distribution in decimal form
    supplyApy: BigDecimal!
    # borrow apy not including the COMP distribution in decimal form
    borrowApy: BigDecimal!
    # total supply apy including the COMP distribution in decimal form
    totalSupplyApy: BigDecimal!
    # total borrow apy including the COMP distribution in decimal form
    totalBorrowApy: BigDecimal!
    # total amount of underlying tokens supplied over time
    totalSupply: BigDecimal!
    # total amount of underlying tokens borrowed over time
    totalBorrow: BigDecimal!
    # total amount of underlying token in reserves over time
    totalReserves: BigDecimal!
    # utalization
    utalization: BigDecimal!
    # number of transactions that went into deriving this data entry
    txCount: BigInt!
}

type MarketWeekData @entity {
    # token address concatendated with date
    id: ID!
    # market that this data belongs to
    market: Market!
    # timestamp rounded (TODO)
    date: BigInt!
    # supply apy not including the COMP distribution in decimal form
    supplyApy: BigDecimal!
    # borrow apy not including the COMP distribution in decimal form
    borrowApy: BigDecimal!
    # total supply apy including the COMP distribution in decimal form
    totalSupplyApy: BigDecimal!
    # total borrow apy including the COMP distribution in decimal form
    totalBorrowApy: BigDecimal!
    # total amount of underlying tokens supplied over time
    totalSupply: BigDecimal!
    # total amount of underlying tokens borrowed over time
    totalBorrow: BigDecimal!
    # total amount of underlying token in reserves over time
    totalReserves: BigDecimal!
    # utalization
    utalization: BigDecimal!
    # number of transactions that went into deriving this data entry
    txCount: BigInt!
}
